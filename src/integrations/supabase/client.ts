// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import { Database } from './types';

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL || 'https://xlwnevmqgfqhowpffqlv.supabase.co';
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || 'your_supabase_anon_key_here';

export const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  },
  realtime: {
    params: {
      eventsPerSecond: 10
    }
  }
});

// Function to manually set session from cookies
export const setSessionFromCookies = async () => {
  const cookies = document.cookie.split(';');
  const accessTokenCookie = cookies.find(c => c.trim().startsWith('sb-access-token='));
  const refreshTokenCookie = cookies.find(c => c.trim().startsWith('sb-refresh-token='));
  
  if (accessTokenCookie && refreshTokenCookie) {
    const accessToken = accessTokenCookie.split('=')[1];
    const refreshToken = refreshTokenCookie.split('=')[1];
    
    console.log('Found session cookies, setting session...');
    
    // Set the session manually
    const { data, error } = await supabase.auth.setSession({
      access_token: accessToken,
      refresh_token: refreshToken
    });
    
    if (error) {
      console.error('Error setting session from cookies:', error);
    } else {
      console.log('Session set successfully from cookies');
    }
    
    return { data, error };
  }
  
  return { data: null, error: null };
};

// Storage configuration
export const STORAGE_BUCKET = 'highway-issues';
export const STORAGE_URL = 'https://xlwnevmqgfqhowpffqlv.supabase.co/storage/v1/object/public/highway-issues';